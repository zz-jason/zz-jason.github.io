<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Jian Zhang</title><link>https://zz-jason.github.io/posts/</link><description>Recent content in Posts on Jian Zhang</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Fri, 28 Jan 2022 02:41:56 +0000</lastBuildDate><atom:link href="https://zz-jason.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>2021 读书总结</title><link>https://zz-jason.github.io/posts/2021-books/</link><pubDate>Fri, 28 Jan 2022 02:41:56 +0000</pubDate><guid>https://zz-jason.github.io/posts/2021-books/</guid><description>一些让人印象深刻的书 今年看的少听的多，发现樊登读书是个不错的平台，能够帮助快速掌握一本书的大致内容，判断是否有值得深度学习的兴趣，于是一口气</description></item><item><title>TiDB 的架构进化之道</title><link>https://zz-jason.github.io/posts/tidb-arch-evolution/</link><pubDate>Fri, 16 Jul 2021 06:17:59 +0000</pubDate><guid>https://zz-jason.github.io/posts/tidb-arch-evolution/</guid><description>整理自《高可用架构》的采访，原文：https://mp.weixin.qq.com/s/7nI_0jmr4Mo6zHzWCvTwpQ 1. 简单介</description></item><item><title>2020 读书总结</title><link>https://zz-jason.github.io/posts/2020-books/</link><pubDate>Wed, 30 Dec 2020 06:54:50 +0800</pubDate><guid>https://zz-jason.github.io/posts/2020-books/</guid><description>2020 年转瞬即逝，过去我可能会看论文比较多，今年稍微有些变化，读书比较多，因此利用这篇文章简单总结下 2020 年阅读过的书籍吧，很多都蛮不错的，后面找时</description></item><item><title>论文阅读：《A Critique of ANSI SQL Isolation Levels》</title><link>https://zz-jason.github.io/posts/ansi-sql-isolation-levels/</link><pubDate>Sat, 12 Sep 2020 16:13:29 +0000</pubDate><guid>https://zz-jason.github.io/posts/ansi-sql-isolation-levels/</guid><description>前言 最近和朋友聊到事务隔离级别（Isolation Level），发现好多东西记得不牢靠。于是捡起 《A Critique of ANSI SQL Isolation Levels》 重新阅读一把，记</description></item><item><title>降低 q-error，避免不优执行计划</title><link>https://zz-jason.github.io/posts/q-error/</link><pubDate>Mon, 03 Aug 2020 07:06:54 +0000</pubDate><guid>https://zz-jason.github.io/posts/q-error/</guid><description>整理自 《降低 q-error，避免不优执行计划》</description></item><item><title>TiDB SQL Engine Team：纯手工打磨前沿的优化器和执行引擎｜PingCAP 招聘季</title><link>https://zz-jason.github.io/posts/tidb-sql-engine-team/</link><pubDate>Wed, 25 Mar 2020 06:26:16 +0000</pubDate><guid>https://zz-jason.github.io/posts/tidb-sql-engine-team/</guid><description>“SQL at SCALE”（出自 PingCAP 官网）是我们对 TiDB 的一个精简概括，而我们 TiDB SQL Engine Team 正是负责这 3 个单词中的 “SQL” 部分，其重要性可见一斑。SQL 在</description></item><item><title>重构 EXPLAIN</title><link>https://zz-jason.github.io/posts/refactor-explain/</link><pubDate>Sun, 13 Aug 2017 11:06:51 +0800</pubDate><guid>https://zz-jason.github.io/posts/refactor-explain/</guid><description>explain 的用途非常广泛，比如用来查看某个表的信息，查看执行计划等等。explain 的语法可以参考 mysql 文档：EXPLAIN Syntax，另外 EXPLAIN, DESCRIBE, DESC 这几</description></item><item><title>重构 Projection Elimination</title><link>https://zz-jason.github.io/posts/refactor-projection/</link><pubDate>Sat, 12 Aug 2017 11:03:22 +0800</pubDate><guid>https://zz-jason.github.io/posts/refactor-projection/</guid><description>在 TiDB rc4 版本以前，Projection Elimination 是在 Physical Optimization 阶段完成以后做的。老的 Projection Elimination 只能消除那种做纯拷贝，不交换列的顺序，只改变列的名字的 Project</description></item></channel></rss>