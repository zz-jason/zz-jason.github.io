<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>MVCC on Jian Zhang</title><link>https://zz-jason.github.io/categories/mvcc/</link><description>Recent content in MVCC on Jian Zhang</description><generator>Hugo -- gohugo.io</generator><language>en</language><copyright>@2023 Jian Zhang</copyright><lastBuildDate>Wed, 24 May 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://zz-jason.github.io/categories/mvcc/index.xml" rel="self" type="application/rss+xml"/><item><title>[VLDB 2023] Scalable and Robust Snapshot Isolation for High-Performance Storage Engines</title><link>https://zz-jason.github.io/posts/vldb-2023-scalable-and-robust-si/</link><pubDate>Wed, 24 May 2023 00:00:00 +0000</pubDate><guid>https://zz-jason.github.io/posts/vldb-2023-scalable-and-robust-si/</guid><description>简介 # 这篇论文提出了一种能够避免 long-running OLAP query 影响 OLTP 事务、在多核 CPU 上 scale、支持 out-of-memory workload 的 MVCC 实现机制。</description></item><item><title>[VLDB 2022] Memory-Optimized Multi-Version Concurrency Control for Disk-Based Database Systems</title><link>https://zz-jason.github.io/posts/vldb-2022-memory-opotimized-mvcc/</link><pubDate>Fri, 07 Apr 2023 00:00:00 +0000</pubDate><guid>https://zz-jason.github.io/posts/vldb-2022-memory-opotimized-mvcc/</guid><description>简介 # 这篇论文主要讲了 Umbra（TUM 实现的 larger-than-RAM 数据库）的高性能 MVCC 实现。作者将事务分为两类，一类是数据修改量不大可以在内存中完成的常规事务，一类是需要修改大量数据的 bulk operation（比如 bulk load）。作者提出了将所有老版本数据存储在内存的 MVCC 实现方案，可以极大加速常规事务的执行。同时也给出了一种应对 bulk operation 的事务执行策略。</description></item></channel></rss>